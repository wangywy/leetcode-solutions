class Solution {
public:
    int singleNumber(int A[], int n) {
        if (n == 0) return -1;
        int res = 0;
        for (int i = 0; i < n; i++) {
            res ^= A[i];
        }
        return res;
    }
};

/*
本题用利用了异或位运算的性质

异或运算的规则是：同值取0，异值取1
可以把异或运算看成是没有进位的二进制加法：0+0=0, 0+1=1, 1+0=1,1+1=0
异或运算有以下性质：
1.由定义可知，对任意x，有x^x = 0, x^0 = x
2.交换性：x^y = y^x
3.结合性：(x^y)^Z = x^(y^z)
4.自反性：x^y^x = x^x^y = y

题目中指出只有一个数字出现一次，其他所有数字都出现两次。
利用以上4个性质将所有的数字全部做异或运算，得到的结果便是只出现一次的那个数。
*/
